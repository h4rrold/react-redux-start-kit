{"ast":null,"code":"var _jsxFileName = \"/Users/g4rrold/WebstormProjects/react-redux-start-kit/src/components/forms/auth/RegistrationForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\nimport { Form, Formik, Field } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\nimport { registerUserRequestThunk } from \"store/thunks\";\nimport { getRegisterIsLoadingSelector, getRegisterErrorSelector } from \"store/selectors/auth/register\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useFormStyles = makeStyles(theme => ({\n  gridContainer: {\n    \"& > .MuiGrid-item \": {\n      marginBottom: theme.spacing(2)\n    }\n  }\n}));\nconst RegistrationSchema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n  password: Yup.string().min(8, \"Too short\").required(\"Required\"),\n  passwordCheck: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\").required(\"Required\")\n});\n\nconst RegistrationForm = ({\n  registerUserRequestThunk,\n  isLoading,\n  errorMessageBE\n}) => {\n  _s();\n\n  const classes = useFormStyles();\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    validationSchema: RegistrationSchema,\n    onSubmit: ({\n      email,\n      password\n    }, actions) => {\n      registerUserRequestThunk({\n        email,\n        password\n      });\n      debugger;\n      actions.setSubmitting(false);\n    },\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      passwordCheck: \"\"\n    },\n    children: ({\n      errors: formikErrors\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        className: classes.gridContainer,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            fullWidth: true,\n            variant: \"outlined\",\n            component: TextField,\n            disabled: isLoading,\n            label: \"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\",\n            name: \"name\",\n            type: \"text\",\n            InputProps: {\n              margin: \"dense\",\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(AccountCircleOutlinedIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            fullWidth: true,\n            label: \"Email\",\n            component: TextField,\n            variant: \"outlined\",\n            type: \"text\",\n            name: \"email\",\n            InputProps: {\n              margin: \"dense\",\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(EmailIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            fullWidth: true,\n            variant: \"outlined\",\n            component: TextField,\n            label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n            name: \"password\",\n            type: \"password\",\n            InputProps: {\n              margin: \"dense\",\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(LockIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            fullWidth: true,\n            variant: \"outlined\",\n            component: TextField,\n            label: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0436\\u0434\\u0435\\u043D\\u0438\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044F\",\n            name: \"passwordCheck\",\n            type: \"password\",\n            InputLabelProps: {\n              shrink: true\n            },\n            InputProps: {\n              margin: \"dense\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), errorMessageBE && /*#__PURE__*/_jsxDEV(Box, {\n          mb: 2,\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"error\",\n            children: errorMessageBE\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: !isEmpty(formikErrors) || isLoading,\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegistrationForm, \"omXE6kd69HNAtdTjv/Aj9yAghYo=\", false, function () {\n  return [useFormStyles];\n});\n\n_c = RegistrationForm;\n\nconst mapStateToProps = state => ({\n  isLoading: getRegisterIsLoadingSelector(state),\n  errorMessageBE: getRegisterErrorSelector(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  registerUserRequestThunk: ({\n    email,\n    password\n  }) => dispatch(registerUserRequestThunk({\n    email,\n    password\n  }))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"sources":["/Users/g4rrold/WebstormProjects/react-redux-start-kit/src/components/forms/auth/RegistrationForm.jsx"],"names":["React","connect","Yup","Box","Typography","Grid","Button","InputAdornment","makeStyles","LockIcon","EmailIcon","AccountCircleOutlinedIcon","Form","Formik","Field","TextField","registerUserRequestThunk","getRegisterIsLoadingSelector","getRegisterErrorSelector","isEmpty","useFormStyles","theme","gridContainer","marginBottom","spacing","RegistrationSchema","object","shape","email","string","required","password","min","passwordCheck","oneOf","ref","RegistrationForm","isLoading","errorMessageBE","classes","actions","setSubmitting","name","errors","formikErrors","margin","startAdornment","shrink","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as Yup from \"yup\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\n\nimport { Form, Formik, Field } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\n\nimport { registerUserRequestThunk } from \"store/thunks\";\nimport {\n  getRegisterIsLoadingSelector,\n  getRegisterErrorSelector,\n} from \"store/selectors/auth/register\";\n\nimport isEmpty from \"lodash/isEmpty\";\n\nconst useFormStyles = makeStyles((theme) => ({\n  gridContainer: {\n    \"& > .MuiGrid-item \": {\n      marginBottom: theme.spacing(2),\n    },\n  },\n}));\n\nconst RegistrationSchema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n  password: Yup.string().min(8, \"Too short\").required(\"Required\"),\n  passwordCheck: Yup.string()\n    .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n    .required(\"Required\"),\n});\n\nconst RegistrationForm = ({\n  registerUserRequestThunk,\n  isLoading,\n  errorMessageBE,\n}) => {\n  const classes = useFormStyles();\n\n  return (\n    <Formik\n      validationSchema={RegistrationSchema}\n      onSubmit={({ email, password }, actions) => {\n        registerUserRequestThunk({ email, password });\n        debugger;\n        actions.setSubmitting(false);\n      }}\n      initialValues={{ name: \"\", email: \"\", password: \"\", passwordCheck: \"\" }}\n    >\n      {({ errors: formikErrors }) => (\n        <Form>\n          <Grid container direction=\"column\" className={classes.gridContainer}>\n            <Grid item xs={12}>\n              <Field\n                fullWidth\n                variant=\"outlined\"\n                component={TextField}\n                disabled={isLoading}\n                label=\"Ваше имя\"\n                name=\"name\"\n                type=\"text\"\n                InputProps={{\n                  margin: \"dense\",\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <AccountCircleOutlinedIcon />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Field\n                fullWidth\n                label=\"Email\"\n                component={TextField}\n                variant=\"outlined\"\n                type=\"text\"\n                name=\"email\"\n                InputProps={{\n                  margin: \"dense\",\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <EmailIcon />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Field\n                fullWidth\n                variant=\"outlined\"\n                component={TextField}\n                label=\"Пароль\"\n                name=\"password\"\n                type=\"password\"\n                InputProps={{\n                  margin: \"dense\",\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <LockIcon />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Field\n                fullWidth\n                variant=\"outlined\"\n                component={TextField}\n                label=\"Подтверждение пароля\"\n                name=\"passwordCheck\"\n                type=\"password\"\n                InputLabelProps={{ shrink: true }}\n                InputProps={{\n                  margin: \"dense\",\n                }}\n              />\n            </Grid>\n            {errorMessageBE && (\n              <Box mb={2} textAlign=\"center\">\n                <Typography color=\"error\">{errorMessageBE}</Typography>\n              </Box>\n            )}\n            <Button\n              type=\"submit\"\n              disabled={!isEmpty(formikErrors) || isLoading}\n              color=\"primary\"\n              variant=\"contained\"\n            >\n              Подтвердить\n            </Button>\n          </Grid>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isLoading: getRegisterIsLoadingSelector(state),\n  errorMessageBE: getRegisterErrorSelector(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  registerUserRequestThunk: ({ email, password }) =>\n    dispatch(registerUserRequestThunk({ email, password })),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);\n"]},"metadata":{},"sourceType":"module"}