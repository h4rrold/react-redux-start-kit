{"ast":null,"code":"import { createSelector } from \"reselect\";\n\nconst getAuthState = state => state.auth;\n\nexport const getUserDataSelector = createSelector(getAuthState, auth => auth.user);\nexport const getUserErrorSelector = createSelector(getAuthState, auth => auth.login.error);\nexport const getAuthIsLoadingSelector = createSelector(getAuthState, auth => auth.login.isLoading);\nexport const getUserTokenSelector = createSelector(getAuthState, auth => {\n  var _auth$user$token, _auth$user;\n\n  return (_auth$user$token = (_auth$user = auth.user) === null || _auth$user === void 0 ? void 0 : _auth$user.token) !== null && _auth$user$token !== void 0 ? _auth$user$token : \"\";\n});","map":{"version":3,"sources":["/Users/g4rrold/WebstormProjects/react-redux-start-kit/src/store/selectors/auth/login/index.js"],"names":["createSelector","getAuthState","state","auth","getUserDataSelector","user","getUserErrorSelector","login","error","getAuthIsLoadingSelector","isLoading","getUserTokenSelector","token"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAAtC;;AAEA,OAAO,MAAMC,mBAAmB,GAAGJ,cAAc,CAC/CC,YAD+C,EAE9CE,IAAD,IAAUA,IAAI,CAACE,IAFgC,CAA1C;AAKP,OAAO,MAAMC,oBAAoB,GAAGN,cAAc,CAChDC,YADgD,EAE/CE,IAAD,IAAUA,IAAI,CAACI,KAAL,CAAWC,KAF2B,CAA3C;AAKP,OAAO,MAAMC,wBAAwB,GAAGT,cAAc,CACpDC,YADoD,EAEnDE,IAAD,IAAUA,IAAI,CAACI,KAAL,CAAWG,SAF+B,CAA/C;AAKP,OAAO,MAAMC,oBAAoB,GAAGX,cAAc,CAChDC,YADgD,EAE/CE,IAAD;AAAA;;AAAA,2CAAUA,IAAI,CAACE,IAAf,+CAAU,WAAWO,KAArB,+DAA8B,EAA9B;AAAA,CAFgD,CAA3C","sourcesContent":["import { createSelector } from \"reselect\";\n\nconst getAuthState = (state) => state.auth;\n\nexport const getUserDataSelector = createSelector(\n  getAuthState,\n  (auth) => auth.user\n);\n\nexport const getUserErrorSelector = createSelector(\n  getAuthState,\n  (auth) => auth.login.error\n);\n\nexport const getAuthIsLoadingSelector = createSelector(\n  getAuthState,\n  (auth) => auth.login.isLoading\n);\n\nexport const getUserTokenSelector = createSelector(\n  getAuthState,\n  (auth) => auth.user?.token ?? \"\"\n);\n"]},"metadata":{},"sourceType":"module"}